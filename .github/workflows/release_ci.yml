name: Release CI

on:
    push:
        branches: [master]

env:
    DOCKER_IMAGE: ghcr.io/code-yeongyu/api.inssa.club_waitlist
    VERSION: ${{ github.sha }}

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: 1234
                    POSTGRES_DB: database
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Check out the source code
              uses: actions/checkout@v2
            - name: Setup Go
              uses: actions/setup-go@v2
              with:
                  go-version: 1.16
            - name: Test
              run: go test -v ./...

    build:
        needs: [test]
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Check out the source code
              uses: actions/checkout@v2
            - name: Setup docker buildx
              id: buildx
              uses: docker/setup-buildx-action@v1
            - name: Cache docker layers
              uses: actions/cache@v2
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ env.VERSION }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
            - name: Login to ghcr
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{github.actor}}
                  password: ${{secrets.LINKKKY_PAT}}
            - name: Build & Push
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  builder: ${{steps.buildx.outputs.name}}
                  push: ${{github.event_name != 'pull_request'}}
                  tags: ${{env.DOCKER_IMAGE}}:${{env.VERSION}}

    deploy:
        needs: [test, build]
        name: Deploy
        runs-on: [self-hosted, production]
        steps:
            - name: Login to ghcr using commands
              run: echo "${{secrets.LINKKKY_PAT}}" | docker login ghcr.io --username ${{ github.actor }} --password-stdin
            - name: Rolling update the service
              run: |
                  docker service update \
                  --force \
                  --with-registry-auth \
                  --update-parallelism 1 \
                  --image ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} \
                  inssa_waitlist

    cleanup:
        needs: [test, build, deploy]
        name: Clean Up
        runs-on: [self-hosted, production]
        steps:
            - name: Prune stopped containers
              run: docker container prune -f
            - name: Prune unused images
              run: docker image prune -af
